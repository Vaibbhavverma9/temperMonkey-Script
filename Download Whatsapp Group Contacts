// ==UserScript==
// @name         WhatsApp Group Contacts Downloader + Copier
// @namespace    http://tampermonkey.net/
// @version      1.5
// @description  Downloads or copies WhatsApp group contacts using group name + date as filename. Adds buttons beside search icon on WhatsApp Web.
// @author       You
// @match        https://web.whatsapp.com/*
// @grant        none
// ==/UserScript==

(function () {
    const injectButtons = () => {
        const searchIcon = document.querySelector('span[data-icon="search-alt"]');
        const menuIcon = document.querySelector('span[data-icon="menu"]');

        if (!searchIcon || !menuIcon) return;

        if (document.getElementById("downloadNumbersBtn") || document.getElementById("copyNumbersBtn")) return;

        const getPhoneNumbers = () => {
            const spans = document.querySelectorAll('span[title*="+"]');
            let fullText = "";
            spans.forEach(span => {
                fullText += span.getAttribute("title") + " ";
            });

            const matches = fullText.match(/\+[\d\s]{8,}/g) || [];
            const cleaned = matches.map(num => num.replace(/\s+/g, ''));
            return Array.from(new Set(cleaned));
        };

        const getGroupName = () => {
            const header = document.querySelector("header");
            if (!header) return "whatsapp_group";

            const spans = header.querySelectorAll('span[dir="auto"]');
            for (let span of spans) {
                const name = span.textContent?.trim();
                if (name && name.length > 0) {
                    return name.replace(/[\\/:*?"<>|]/g, "");
                }
            }

            return "whatsapp_group";
        };

        const parentRow = searchIcon.closest("button[role='button']")?.parentElement.parentElement;
        const container = parentRow || menuIcon.parentElement;

        const downloadBtn = document.createElement("span");
        downloadBtn.id = "downloadNumbersBtn";
        downloadBtn.textContent = "⬇️";
        downloadBtn.title = "Download phone numbers";
        downloadBtn.style.cssText = "cursor:pointer;font-size:20px;margin:0 8px;color:red;";
        container.insertBefore(downloadBtn, searchIcon.closest("div[role='button']"));

        const copyBtn = document.createElement("span");
        copyBtn.id = "copyNumbersBtn";
        copyBtn.textContent = "📋";
        copyBtn.title = "Copy phone numbers to clipboard";
        copyBtn.style.cssText = "cursor:pointer;font-size:20px;margin:0 8px;color:orange;";
        container.insertBefore(copyBtn, downloadBtn.nextSibling);

        downloadBtn.addEventListener("click", () => {
            const numbers = getPhoneNumbers();
            if (!numbers.length) {
                alert("No phone numbers found. Make sure participant list is visible.");
                return;
            }

            const groupName = getGroupName();
            const today = new Date().toISOString().split("T")[0];
            const filename = `${groupName} - ${today}.csv`;

            const csv = "data:text/csv;charset=utf-8," + numbers.join("\n");
            const link = document.createElement("a");
            link.setAttribute("href", encodeURI(csv));
            link.setAttribute("download", filename);
            document.body.appendChild(link);
            link.click();
            document.body.removeChild(link);
        });

        copyBtn.addEventListener("click", () => {
            const numbers = getPhoneNumbers();
            if (!numbers.length) {
                alert("No phone numbers found. Make sure participant list is visible.");
                return;
            }

            const textToCopy = numbers.join("\n");
            navigator.clipboard.writeText(textToCopy).then(() => {
                const tempNote = document.createElement("div");
                tempNote.textContent = "📋 Phone numbers copied!";
                tempNote.style.cssText = `
                    position: fixed;
                    bottom: 20px;
                    left: 50%;
                    transform: translateX(-50%);
                    background-color: #4caf50;
                    color: white;
                    padding: 10px 20px;
                    border-radius: 10px;
                    z-index: 9999;
                `;
                document.body.appendChild(tempNote);
                setTimeout(() => tempNote.remove(), 3000);
            });
        });
    };

    // Observe DOM changes
    const observer = new MutationObserver(() => {
        injectButtons();
    });

    observer.observe(document.body, {
        childList: true,
        subtree: true
    });

    // Also try injecting immediately in case it's already loaded
    injectButtons();
})();
